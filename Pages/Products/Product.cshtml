@page "/products/{id}"
@using SuopCommerce.Models
@model ProductModel
@{
}
<link rel="stylesheet" href="~/css/product.css" asp-append-version="true" />

<div class="product-page-wrapper">
    <div class="product-image-gallery"> 
        @foreach (var image in Model.images)
        {
            <span>@image.Description</span>
            <img src="@image.Url">
        }
        @if(Model.images.Length == 0)
        {
            <span class="placeholder-image"></span>
        }
    </div>
    <div class="product-info">

        <h1>@Model.product.Name</h1>
        <div class="product-description">@Html.Raw(Model.MarkdownToHtml(Model.product.Description))</div>
        <p>@Model.debug</p>

        @foreach (var extraString in Model.product.Extras)
        {
            var extra = Model.ParseExtra(extraString);

            switch (extra.Type)
            {
                case Extras.Types.PerLetter:
                    <div>
                        <b>@extra.Text</b> (+ $@Model.FormatMoney(extra.Cost) per letter)<br>
                        <input type="text" value="" oninput="window.suopProduct.setPerLetter(this.value, `@extra.Id`, @extra.Cost)" />
                    </div>
                    break;
                case Extras.Types.TextField:
                    <div>
                        <b>@extra.Text</b><br>
                        <textarea oninput="console.log(this.value)"></textarea>TODO MAKE THIS ACTUALLY ADD THE CUSTOMIZATION TO THE ORDER.
                    </div>    
                break;
                case Extras.Types.Invalid:
                    <span><h1>Invalid extra:</h1> @extra.Text</span>
                    break;
                default:
                    <span><b>Extra type @extra.Type.ToString() has not yet been implemented.</b></span>
                    break;
            }
        }

        @foreach (var addonId in Model.product.Addons)
        {
            var addon = Model.db.Products.Find(addonId);
            if(addon == null) continue;
            var addonImageUrl = await Model.GetImageUrlAsync(addon.Images.FirstOrDefault());

            <label class="product-addon" onclick="window.suopProduct.toggleAddon(@addon.Id, @addon.Price)">
                <img src="@addonImageUrl" class="addon-image"/>
                <span class="addon-text">
                    <span>
                        <b>@addon.Name</b> (+ <span class="price">@Model.FormatMoney(addon.Price)</span>)
                    </span>
                    <br>
                    <span>@addon.Description</span>
                </span>

                <input type="checkbox" id="addon-@addon.Id" />

            </label>
        }

        
        <h1 id="final-price" class="">$@Model.FormatMoney(Model.product.Price)</h1>
        <button class="rounded-square-button" onclick="window.suopProduct.addToCart()">Buy now</button>
        <script src="/js/product.js" asp-append-version="true" ></script>

        <script defer>
            addEventListener('DOMContentLoaded', () => {
                window.suopProduct.basePrice = @Model.product.Price
                window.suopProduct.id = @Model.product.Id
            });
        </script>
    </div>

</div>
